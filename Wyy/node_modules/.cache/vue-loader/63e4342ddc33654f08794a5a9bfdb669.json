{"remainingRequest":"D:\\Project\\Wyy\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Project\\Wyy\\src\\components\\Playbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Project\\Wyy\\src\\components\\Playbar.vue","mtime":1675081978821},{"path":"D:\\Project\\Wyy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653963798725},{"path":"D:\\Project\\Wyy\\node_modules\\babel-loader\\lib\\index.js","mtime":1653963802592},{"path":"D:\\Project\\Wyy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653963798725},{"path":"D:\\Project\\Wyy\\node_modules\\vue-loader\\lib\\index.js","mtime":1653963801905}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n    import Bus from '../Bus.js'\n    import openBtn from '../icons/openBtn.vue'\n    \n    export default{\n        name:'Playbar',\n        props:['playlist','play'],\n        components:{\n            openBtn\n        },\n        data(){\n          return{\n              song:{\n                  al:''\n              },\n              index:0\n          }  \n        },\n        methods:{\n            durationUpdate(){//音乐播放触发\n                if(this.$route.path != \"/play\") return false;\n                this.$emit('save')\n            },\n            playFun(id){//点击bar触发\n                this.$router.push(\"/play\")\n            },\n            audioPlay(id){\n               let paused = this.$parent.audio.paused;\n               if(paused){\n                   localStorage.playsongID = id;\n                   this.$parent.audio.play();\n               }else{\n                   this.$parent.audio.pause();\n               }\n               this.$parent.play = paused;\n             },//播放完成触发\n            playend(state){\n                let playlist = this.$parent.playlist;\n                let index = playlist[0].index;\n                index++;\n                if(index == playlist.length){\n                    index == 0;\n                }\n                playlist[0].index = index;\n                const main = this;\n                this.user = JSON.parse(localStorage.user);\n                this.axios.get(this.ApiURl+'/song/detail',{\n                    params:{\n                        ids:playlist[index].id,\n                        cookie:this.user.cookie\n                    }\n                }).then(function(res){\n                    main.song = res.data.songs[0];\n                    Bus.$emit('song',main.song);\n                    \n                    main.axios.get(main.ApiURl+'/song/url',{\n                        params:{\n                            id:playlist[index].id, \n                            cookie:main.user.cookie\n                        }\n                    }).then(function(res){\n                        window.paused = playlist[index].id;\n                        main.$parent.play = true;\n                        main.$parent.audio.src = res.data.data[0].url;\n                        localStorage.setItem(\"played\",JSON.stringify(main.song));\n                    })\n                })\n            }\n        },\n        mounted() {\n            Bus.$on('song',(song) => {\n                this.song = song;\n            })\n            this.$parent.audio = document.querySelector(\"#audio\");\n\t\t\tconsole.log(this.$parent.audio)\n            let played = localStorage.played;\n            let user = localStorage.user;\n            if(!played || !user) return false;\n            \n            played = JSON.parse(played);\n            user = JSON.parse(user);\n            this.song = played;\n            this.song.play = false;\n            const main = this;\n            this.axios.get(this.ApiURl+'/song/url',{\n                params:{\n                    id:played.id,\n                    cookie:user.cookie\n                }\n            }).then(function(res) {\n                main.$parent.audio.src = res.data.data[0].url;\n                main.$parent.audio.pause();\n            })\n        },\n        watch:{\n            play:function (play){\n                \n            }\n        }\n    }\n",{"version":3,"sources":["Playbar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Playbar.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div class=\"playbar\" @click=\"playFun(song.id)\">\r\n        <audio id=\"audio\"\r\n            autoplay\r\n            @timeupdate=\"durationUpdate\" \r\n            @ended=\"playend('next')\" />\r\n        <div class=\"cover\">\r\n            <img :src=\"song.al.picUrl\" >\r\n        </div>\r\n        <div class=\"info\">\r\n            <p>{{song.name}}</p>\r\n            <p><span v-for=\"item in song.ar\">{{item.name}}</span></p>\r\n        </div>\r\n        <div class=\"openw\" @click.stop=\"audioPlay(song.id)\">\r\n            <openBtn :isBtn='$parent.play'></openBtn>\r\n        </div>\r\n    </div>\n</template>\n\n<script>\r\n    import Bus from '../Bus.js'\r\n    import openBtn from '../icons/openBtn.vue'\r\n    \r\n    export default{\r\n        name:'Playbar',\r\n        props:['playlist','play'],\r\n        components:{\r\n            openBtn\r\n        },\r\n        data(){\r\n          return{\r\n              song:{\r\n                  al:''\r\n              },\r\n              index:0\r\n          }  \r\n        },\r\n        methods:{\r\n            durationUpdate(){//音乐播放触发\r\n                if(this.$route.path != \"/play\") return false;\r\n                this.$emit('save')\r\n            },\r\n            playFun(id){//点击bar触发\r\n                this.$router.push(\"/play\")\r\n            },\r\n            audioPlay(id){\r\n               let paused = this.$parent.audio.paused;\r\n               if(paused){\r\n                   localStorage.playsongID = id;\r\n                   this.$parent.audio.play();\r\n               }else{\r\n                   this.$parent.audio.pause();\r\n               }\r\n               this.$parent.play = paused;\r\n             },//播放完成触发\r\n            playend(state){\r\n                let playlist = this.$parent.playlist;\r\n                let index = playlist[0].index;\r\n                index++;\r\n                if(index == playlist.length){\r\n                    index == 0;\r\n                }\r\n                playlist[0].index = index;\r\n                const main = this;\r\n                this.user = JSON.parse(localStorage.user);\r\n                this.axios.get(this.ApiURl+'/song/detail',{\r\n                    params:{\r\n                        ids:playlist[index].id,\r\n                        cookie:this.user.cookie\r\n                    }\r\n                }).then(function(res){\r\n                    main.song = res.data.songs[0];\r\n                    Bus.$emit('song',main.song);\r\n                    \r\n                    main.axios.get(main.ApiURl+'/song/url',{\r\n                        params:{\r\n                            id:playlist[index].id, \r\n                            cookie:main.user.cookie\r\n                        }\r\n                    }).then(function(res){\r\n                        window.paused = playlist[index].id;\r\n                        main.$parent.play = true;\r\n                        main.$parent.audio.src = res.data.data[0].url;\r\n                        localStorage.setItem(\"played\",JSON.stringify(main.song));\r\n                    })\r\n                })\r\n            }\r\n        },\r\n        mounted() {\r\n            Bus.$on('song',(song) => {\r\n                this.song = song;\r\n            })\r\n            this.$parent.audio = document.querySelector(\"#audio\");\r\n\t\t\tconsole.log(this.$parent.audio)\r\n            let played = localStorage.played;\r\n            let user = localStorage.user;\r\n            if(!played || !user) return false;\r\n            \r\n            played = JSON.parse(played);\r\n            user = JSON.parse(user);\r\n            this.song = played;\r\n            this.song.play = false;\r\n            const main = this;\r\n            this.axios.get(this.ApiURl+'/song/url',{\r\n                params:{\r\n                    id:played.id,\r\n                    cookie:user.cookie\r\n                }\r\n            }).then(function(res) {\r\n                main.$parent.audio.src = res.data.data[0].url;\r\n                main.$parent.audio.pause();\r\n            })\r\n        },\r\n        watch:{\r\n            play:function (play){\r\n                \r\n            }\r\n        }\r\n    }\n</script>\n\n<style>\r\n    .playbar{\r\n        display: flex;\r\n        max-width: 475px;\r\n        width: 100%;\r\n        height: 50px;\r\n        padding: 5px 10px;\r\n        background-color: rgba(222,222,222,.4);\r\n    }\r\n    .playbar .cover{\r\n        width: 40px;\r\n        height: 40px;\r\n        border-radius: 4px;\r\n        overflow: hidden;\r\n        margin-right: 10px;\r\n    }\r\n    .playbar .info p:last-child{\r\n        font-size: 12px;\r\n        color: #333;\r\n    }\r\n    .playbar .info p span::after{\r\n        content: ' / ';\r\n        color: #000;\r\n    }\r\n    .playbar .info p span:last-child::after{\r\n        content: '';\r\n    }\r\n    .playbar .openw{\r\n        margin-left: auto;\r\n    }\n</style>\n"]}]}