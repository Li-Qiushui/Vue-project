{"remainingRequest":"D:\\Project\\Wyy\\node_modules\\babel-loader\\lib\\index.js!D:\\Project\\Wyy\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Project\\Wyy\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Project\\Wyy\\src\\components\\Playbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Project\\Wyy\\src\\components\\Playbar.vue","mtime":1675081978821},{"path":"D:\\Project\\Wyy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653963798725},{"path":"D:\\Project\\Wyy\\node_modules\\babel-loader\\lib\\index.js","mtime":1653963802592},{"path":"D:\\Project\\Wyy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653963798725},{"path":"D:\\Project\\Wyy\\node_modules\\vue-loader\\lib\\index.js","mtime":1653963801905}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Bus from \"../Bus.js\";\nimport openBtn from \"../icons/openBtn.vue\";\nexport default {\n  name: 'Playbar',\n  props: ['playlist', 'play'],\n  components: {\n    openBtn: openBtn\n  },\n  data: function data() {\n    return {\n      song: {\n        al: ''\n      },\n      index: 0\n    };\n  },\n  methods: {\n    durationUpdate: function durationUpdate() {\n      //音乐播放触发\n      if (this.$route.path != \"/play\") return false;\n      this.$emit('save');\n    },\n    playFun: function playFun(id) {\n      //点击bar触发\n      this.$router.push(\"/play\");\n    },\n    audioPlay: function audioPlay(id) {\n      var paused = this.$parent.audio.paused;\n\n      if (paused) {\n        localStorage.playsongID = id;\n        this.$parent.audio.play();\n      } else {\n        this.$parent.audio.pause();\n      }\n\n      this.$parent.play = paused;\n    },\n    //播放完成触发\n    playend: function playend(state) {\n      var playlist = this.$parent.playlist;\n      var index = playlist[0].index;\n      index++;\n\n      if (index == playlist.length) {\n        index == 0;\n      }\n\n      playlist[0].index = index;\n      var main = this;\n      this.user = JSON.parse(localStorage.user);\n      this.axios.get(this.ApiURl + '/song/detail', {\n        params: {\n          ids: playlist[index].id,\n          cookie: this.user.cookie\n        }\n      }).then(function (res) {\n        main.song = res.data.songs[0];\n        Bus.$emit('song', main.song);\n        main.axios.get(main.ApiURl + '/song/url', {\n          params: {\n            id: playlist[index].id,\n            cookie: main.user.cookie\n          }\n        }).then(function (res) {\n          window.paused = playlist[index].id;\n          main.$parent.play = true;\n          main.$parent.audio.src = res.data.data[0].url;\n          localStorage.setItem(\"played\", JSON.stringify(main.song));\n        });\n      });\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    Bus.$on('song', function (song) {\n      _this.song = song;\n    });\n    this.$parent.audio = document.querySelector(\"#audio\");\n    console.log(this.$parent.audio);\n    var played = localStorage.played;\n    var user = localStorage.user;\n    if (!played || !user) return false;\n    played = JSON.parse(played);\n    user = JSON.parse(user);\n    this.song = played;\n    this.song.play = false;\n    var main = this;\n    this.axios.get(this.ApiURl + '/song/url', {\n      params: {\n        id: played.id,\n        cookie: user.cookie\n      }\n    }).then(function (res) {\n      main.$parent.audio.src = res.data.data[0].url;\n      main.$parent.audio.pause();\n    });\n  },\n  watch: {\n    play: function play(_play) {}\n  }\n};",{"version":3,"sources":["Playbar.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"playbar\" @click=\"playFun(song.id)\">\r\n        <audio id=\"audio\"\r\n            autoplay\r\n            @timeupdate=\"durationUpdate\" \r\n            @ended=\"playend('next')\" />\r\n        <div class=\"cover\">\r\n            <img :src=\"song.al.picUrl\" >\r\n        </div>\r\n        <div class=\"info\">\r\n            <p>{{song.name}}</p>\r\n            <p><span v-for=\"item in song.ar\">{{item.name}}</span></p>\r\n        </div>\r\n        <div class=\"openw\" @click.stop=\"audioPlay(song.id)\">\r\n            <openBtn :isBtn='$parent.play'></openBtn>\r\n        </div>\r\n    </div>\n</template>\n\n<script>\r\n    import Bus from '../Bus.js'\r\n    import openBtn from '../icons/openBtn.vue'\r\n    \r\n    export default{\r\n        name:'Playbar',\r\n        props:['playlist','play'],\r\n        components:{\r\n            openBtn\r\n        },\r\n        data(){\r\n          return{\r\n              song:{\r\n                  al:''\r\n              },\r\n              index:0\r\n          }  \r\n        },\r\n        methods:{\r\n            durationUpdate(){//音乐播放触发\r\n                if(this.$route.path != \"/play\") return false;\r\n                this.$emit('save')\r\n            },\r\n            playFun(id){//点击bar触发\r\n                this.$router.push(\"/play\")\r\n            },\r\n            audioPlay(id){\r\n               let paused = this.$parent.audio.paused;\r\n               if(paused){\r\n                   localStorage.playsongID = id;\r\n                   this.$parent.audio.play();\r\n               }else{\r\n                   this.$parent.audio.pause();\r\n               }\r\n               this.$parent.play = paused;\r\n             },//播放完成触发\r\n            playend(state){\r\n                let playlist = this.$parent.playlist;\r\n                let index = playlist[0].index;\r\n                index++;\r\n                if(index == playlist.length){\r\n                    index == 0;\r\n                }\r\n                playlist[0].index = index;\r\n                const main = this;\r\n                this.user = JSON.parse(localStorage.user);\r\n                this.axios.get(this.ApiURl+'/song/detail',{\r\n                    params:{\r\n                        ids:playlist[index].id,\r\n                        cookie:this.user.cookie\r\n                    }\r\n                }).then(function(res){\r\n                    main.song = res.data.songs[0];\r\n                    Bus.$emit('song',main.song);\r\n                    \r\n                    main.axios.get(main.ApiURl+'/song/url',{\r\n                        params:{\r\n                            id:playlist[index].id, \r\n                            cookie:main.user.cookie\r\n                        }\r\n                    }).then(function(res){\r\n                        window.paused = playlist[index].id;\r\n                        main.$parent.play = true;\r\n                        main.$parent.audio.src = res.data.data[0].url;\r\n                        localStorage.setItem(\"played\",JSON.stringify(main.song));\r\n                    })\r\n                })\r\n            }\r\n        },\r\n        mounted() {\r\n            Bus.$on('song',(song) => {\r\n                this.song = song;\r\n            })\r\n            this.$parent.audio = document.querySelector(\"#audio\");\r\n\t\t\tconsole.log(this.$parent.audio)\r\n            let played = localStorage.played;\r\n            let user = localStorage.user;\r\n            if(!played || !user) return false;\r\n            \r\n            played = JSON.parse(played);\r\n            user = JSON.parse(user);\r\n            this.song = played;\r\n            this.song.play = false;\r\n            const main = this;\r\n            this.axios.get(this.ApiURl+'/song/url',{\r\n                params:{\r\n                    id:played.id,\r\n                    cookie:user.cookie\r\n                }\r\n            }).then(function(res) {\r\n                main.$parent.audio.src = res.data.data[0].url;\r\n                main.$parent.audio.pause();\r\n            })\r\n        },\r\n        watch:{\r\n            play:function (play){\r\n                \r\n            }\r\n        }\r\n    }\n</script>\n\n<style>\r\n    .playbar{\r\n        display: flex;\r\n        max-width: 475px;\r\n        width: 100%;\r\n        height: 50px;\r\n        padding: 5px 10px;\r\n        background-color: rgba(222,222,222,.4);\r\n    }\r\n    .playbar .cover{\r\n        width: 40px;\r\n        height: 40px;\r\n        border-radius: 4px;\r\n        overflow: hidden;\r\n        margin-right: 10px;\r\n    }\r\n    .playbar .info p:last-child{\r\n        font-size: 12px;\r\n        color: #333;\r\n    }\r\n    .playbar .info p span::after{\r\n        content: ' / ';\r\n        color: #000;\r\n    }\r\n    .playbar .info p span:last-child::after{\r\n        content: '';\r\n    }\r\n    .playbar .openw{\r\n        margin-left: auto;\r\n    }\n</style>\n"],"sourceRoot":"src/components"}]}